@page "/signOut"
@inject DatabaseHandler DbHandler
@inject IIpTools iptools

@using System.Net
@using System.Net.Sockets
@using Microsoft.AspNetCore.Http

@using Visitor.Data
@using Visitor.Models
@using Visitor.Services

<h3>Sign Out</h3>

<div class="container">
    <div class="row bg-light">
        <table class="table table-bordered">
            <thead class="thead-dark">
                <tr>
                    <th>Name</th>
                    <th>Company</th>
                    <th>DateTime In</th>
                    <th>DateTime Out</th>
                </tr>
            </thead>
            <tbody>
                @if (Visitors.Any()) {
                    @foreach (var visitor in Visitors) {
                        <tr>
                            <td>@visitor.Name</td>
                            <td>@visitor.Company</td>
                            <td>@visitor.Datetime_In</td>
                            @if (visitor.IsSignedIn) {
                                <td><button class="btn btn-primary" @onclick="(() => SignOutVisitor(visitor.Id))">Sign Out</button></td>
                            } else {
                                 <td>@visitor.Datetime_Out</td>
                            }
                        </tr>
                    }
                } else {
                    <tr><td colspan="6"><strong>No Visitors available</strong></td></tr>
                }
            </tbody>
        </table>
    </div>
</div>




@code {
    List<VisitorModel> Visitors = new List<VisitorModel>();
    protected override async Task OnInitializedAsync()
    {
        await RefreshVisitors();
    }
    private async Task RefreshVisitors()
    {
        string ip = iptools.GetIP();
        Visitors = await DbHandler.GetVisitorsForStore(ip);
    }

    private async Task SignOutVisitor(int id)
    {
        DbHandler.UpdateVisitor(id);
        await RefreshVisitors();
    }



}
